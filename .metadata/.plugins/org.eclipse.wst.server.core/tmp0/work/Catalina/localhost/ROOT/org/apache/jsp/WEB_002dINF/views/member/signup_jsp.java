/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.60
 * Generated at: 2022-03-21 14:35:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1647837644396L));
    _jspx_dependants.put("jar:file:/C:/Users/엔클랩/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Board/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("	integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\"\r\n");
      out.write("	integrity=\"sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js\"\r\n");
      out.write("	integrity=\"sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"\r\n");
      out.write("	integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<title>회원 가입</title>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 전체 컨테이너 */\r\n");
      out.write(".container {\r\n");
      out.write("	width: 2000px;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 재목 */\r\n");
      out.write("h2 {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 전체 row */\r\n");
      out.write(".row {\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/signup\"\r\n");
      out.write("		method=\"post\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row d-flex justify-content-center\">\r\n");
      out.write("				<div class=\"col-7\">\r\n");
      out.write("					<h2>회원 가입</h2>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 아이디 영역 -->\r\n");
      out.write("			<div class=\"row d-flex justify-content-center\">\r\n");
      out.write("				<div class=\"col-1\">\r\n");
      out.write("					<label>아이디</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-5\">\r\n");
      out.write("					<input type=\"text\" id=\"id\" name=\"id\" class=\"form-control\"\r\n");
      out.write("						placeholder=\"ID를 입력 해주세요\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-2\">\r\n");
      out.write("					<button type=\"button\" id=\"btnCheckId\" class=\"btn btn-primary\">중복검사</button>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-8\" id=\"resId\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 비밀번호 영역 -->\r\n");
      out.write("			<div class=\"row d-flex justify-content-center\">\r\n");
      out.write("				<div class=\"col-1\">\r\n");
      out.write("					<label>비밀번호</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-5\">\r\n");
      out.write("					<input type=\"password\" id=\"pw\" name=\"pw\" class=\"form-control\"\r\n");
      out.write("						placeholder=\"비밀번호를 입려 해주세요\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-2\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 비밀번호 확인 영역 -->\r\n");
      out.write("			<div class=\"row d-flex justify-content-center\">\r\n");
      out.write("				<div class=\"col-1\"></div>\r\n");
      out.write("				<div class=\"col-5\">\r\n");
      out.write("					<input type=\"password\" id=\"checkPw\" class=\"form-control\"\r\n");
      out.write("						placeholder=\"비밀번호 확인\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-2\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- 버튼 영역 -->\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-6 d-flex justify-content-end\">\r\n");
      out.write("				<button type=\"button\" id=\"btnSignup\" class=\"btn btn-primary\">회원가입</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-6 d-flex justify-content-start\">\r\n");
      out.write("				<button type=\"button\" id=\"btnCancel\" class=\"btn btn-danger\">취소</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("  		// 변수 설정\r\n");
      out.write("        let id = $(\"#id\"); // 아이디\r\n");
      out.write("		let btnCheckId = $(\"#btnCheckId\"); // 아이디 중복확인\r\n");
      out.write("		let ResID = $(\"#resId\"); // 아이디 검사\r\n");
      out.write("        let pw = $(\"#pw\"); // 비밀번호\r\n");
      out.write("        let checkPw = $(\"#checkPw\"); // 비밀번호 확인\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("		// regexID (통과하면 true, 실패면 false)\r\n");
      out.write("		function regexID() {\r\n");
      out.write("        	const RegexID = /^[a-z0-9]{5,19}$/; //	ID는 영문 소문자, 숫자로 시작하며 6~20자 이내로 (영문 대문자 시작 불가능)\r\n");
      out.write("        	console.log(\"regexID \" + id.val());\r\n");
      out.write("        	console.log(RegexID.test(id.val()));\r\n");
      out.write("			return RegexID.test(id.val()); //	ID의 값을 RegexID 정규식을 통해 통과면 true, 불통과면 false\r\n");
      out.write("		}    \r\n");
      out.write("\r\n");
      out.write("        // ID 입력창을 벗어날 때 regex검사\r\n");
      out.write("		id.onchange = function(e) {\r\n");
      out.write("			if (!regexID()) { //	RegexID에 위배되면 ID 결과창에 아래처럼 출력\r\n");
      out.write("				ResID.html(\"6~20자의 영문 소문자, 숫자만 사용가능 합니다.\");\r\n");
      out.write("				ResID.css({\r\n");
      out.write("					\"font-size\" : \"10px\",\r\n");
      out.write("					\"color\" : \"red\"\r\n");
      out.write("				});\r\n");
      out.write("				console.log(\"id 비워줌  \" + id.val());\r\n");
      out.write("				id.empty(); //	입력값 지움\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("        /* 중복 확인 버튼 클릭\r\n");
      out.write("		$(\"#btnCheckId\").on(\"click\", function(){\r\n");
      out.write("			 console.log(\"aaaaaaaaaaaaaa\");\r\n");
      out.write("				if (regexID()) {\r\n");
      out.write("					$.ajax({\r\n");
      out.write("						url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/checkId\",\r\n");
      out.write("						type : \"post\",\r\n");
      out.write("						data : {id : id.val()}\r\n");
      out.write("					}).done(function(res) { //	res : result\r\n");
      out.write("						if (res == \"Available\") {\r\n");
      out.write("							ResID.html(\"사용 가능한 ID 입니다\");\r\n");
      out.write("							ResID.css({\r\n");
      out.write("								\"font-size\" : \"10px\",\r\n");
      out.write("								\"color\" : \"green\"\r\n");
      out.write("							});\r\n");
      out.write("							console.log(id.val());\r\n");
      out.write("							\r\n");
      out.write("							id.attr(\"readonly\", true);	//	잠금\r\n");
      out.write("							\r\n");
      out.write("						} else if (res == \"Unavailable\") {\r\n");
      out.write("							ResID.html(\"이미 사용중인 아이디입니다.\");\r\n");
      out.write("							ResID.css({\r\n");
      out.write("								\"font-size\" : \"10px\",\r\n");
      out.write("								\"color\" : \"red\"\r\n");
      out.write("							});\r\n");
      out.write("						}\r\n");
      out.write("					}).fail(function(e) {\r\n");
      out.write("						console.log(e);\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("		})\r\n");
      out.write("		*/\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btnCheckId\").on(\"click\", function(){\r\n");
      out.write("			let url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/idCheckPopup\";\r\n");
      out.write("			let name = \"아이디 중복 검사\";\r\n");
      out.write("			let option = \"width=600, height=500, top=300\";\r\n");
      out.write("			window.open(url, name, option);\r\n");
      out.write("		})\r\n");
      out.write("       \r\n");
      out.write("		// 회원 가입 버튼 클릭\r\n");
      out.write("		$(\"#btnSignup\").on(\"click\", function(e){\r\n");
      out.write("			if(id.val() == \"\" || !regexID()) {\r\n");
      out.write("				alert(\"아이디를 입력 해주세요.\");\r\n");
      out.write("				return;\r\n");
      out.write("			} else if (!regexID()) {\r\n");
      out.write("				alert(\"아이디를 다시 입력 해주세요.\");\r\n");
      out.write("				return;\r\n");
      out.write("			} else if (pw.val() == \"\") {\r\n");
      out.write("				alert(\"비밀번호를 입력 해주세요.\");\r\n");
      out.write("				return;\r\n");
      out.write("			} else if (pw.val() !== checkPw.val()) {\r\n");
      out.write("				alert(\"비밀번호가 일치 하지 않습니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("		// 취소 버튼 클릭 \r\n");
      out.write("		$(\"#btnCancel\").on(\"click\", function(){\r\n");
      out.write("			location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\";\r\n");
      out.write("		})\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
